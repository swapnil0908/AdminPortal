{"ast":null,"code":"\"use strict\";\n\nvar _classCallCheck = require(\"/Users/swapnil0908/Downloads/AdminPortal/node_modules/@babel/runtime/helpers/classCallCheck\").default;\n\nvar _createClass = require(\"/Users/swapnil0908/Downloads/AdminPortal/node_modules/@babel/runtime/helpers/createClass\").default;\n\nvar _inherits = require(\"/Users/swapnil0908/Downloads/AdminPortal/node_modules/@babel/runtime/helpers/inherits\").default;\n\nvar _createSuper = require(\"/Users/swapnil0908/Downloads/AdminPortal/node_modules/@babel/runtime/helpers/createSuper\").default;\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n/*\n *  This is an implementation of the Hosted Driver Provider.\n *  It is responsible for setting up the account object, tearing\n *  it down, and setting up the driver correctly.\n */\n\nvar q = require(\"q\");\n\nvar logger_1 = require(\"../logger\");\n\nvar driverProvider_1 = require(\"./driverProvider\");\n\nvar logger = new logger_1.Logger('hosted');\n\nvar Hosted = /*#__PURE__*/function (_driverProvider_1$Dri) {\n  _inherits(Hosted, _driverProvider_1$Dri);\n\n  var _super = _createSuper(Hosted);\n\n  function Hosted(config) {\n    _classCallCheck(this, Hosted);\n\n    return _super.call(this, config);\n  }\n  /**\n   * Configure and launch (if applicable) the object's environment.\n   * @public\n   * @return {q.promise} A promise which will resolve when the environment is\n   *     ready to test.\n   */\n\n\n  _createClass(Hosted, [{\n    key: \"setupDriverEnv\",\n    value: function setupDriverEnv() {\n      logger.info('Using the selenium server at ' + this.config_.seleniumAddress);\n      return q.fcall(function () {});\n    }\n  }]);\n\n  return Hosted;\n}(driverProvider_1.DriverProvider);\n\nexports.Hosted = Hosted; //# sourceMappingURL=hosted.js.map","map":null,"metadata":{},"sourceType":"script"}