{"ast":null,"code":"import _taggedTemplateLiteral from \"/Users/swapnil0908/Downloads/AdminPortal/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nimport _classCallCheck from \"/Users/swapnil0908/Downloads/AdminPortal/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/swapnil0908/Downloads/AdminPortal/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _get from \"/Users/swapnil0908/Downloads/AdminPortal/node_modules/@babel/runtime/helpers/esm/get\";\nimport _getPrototypeOf from \"/Users/swapnil0908/Downloads/AdminPortal/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/swapnil0908/Downloads/AdminPortal/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/Users/swapnil0908/Downloads/AdminPortal/node_modules/@babel/runtime/helpers/esm/createSuper\";\n\nvar _templateObject, _templateObject2, _templateObject3, _templateObject4;\n\nvar __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n      r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n      d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) {\n    if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  }\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n\nimport { boundMethod } from \"autobind-decorator\";\nimport { LitElement, html } from \"lit\";\nimport { ifDefined } from \"lit-html/directives/if-defined.js\";\nimport { customElement } from \"lit/decorators/custom-element.js\";\nimport { property } from \"lit/decorators/property.js\";\nimport { query } from \"lit/decorators/query.js\";\nimport { KEYS, defaultOption } from \"./../constants\";\nimport { selectStyles } from \"./../styles\";\n\nvar SelectPure = /*#__PURE__*/function (_LitElement) {\n  _inherits(SelectPure, _LitElement);\n\n  var _super = _createSuper(SelectPure);\n\n  function SelectPure() {\n    var _this;\n\n    _classCallCheck(this, SelectPure);\n\n    _this = _super.apply(this, arguments);\n    _this.options = [];\n    _this.visible = false;\n    _this.selectedOption = defaultOption;\n    _this._selectedOptions = [];\n    _this.disabled = false;\n    _this.isMultipleSelect = false;\n    _this.name = \"\";\n    _this._id = \"\";\n    _this.formName = \"\";\n    _this.value = \"\";\n    _this.values = [];\n    _this.defaultLabel = \"\";\n    _this.totalRenderedChildOptions = -1;\n    _this.form = null;\n    _this.hiddenInput = null;\n    return _this;\n  }\n\n  _createClass(SelectPure, [{\n    key: \"connectedCallback\",\n    value: function connectedCallback() {\n      _get(_getPrototypeOf(SelectPure.prototype), \"connectedCallback\", this).call(this);\n\n      this.disabled = this.getAttribute(\"disabled\") !== null;\n      this.isMultipleSelect = this.getAttribute(\"multiple\") !== null;\n      this.name = this.getAttribute(\"name\") || \"\";\n      this._id = this.getAttribute(\"id\") || \"\";\n      this.formName = this.name || this.id;\n      this.defaultLabel = this.getAttribute(\"default-label\") || \"\";\n    }\n  }, {\n    key: \"open\",\n    value: function open() {\n      if (this.disabled) {\n        return;\n      }\n\n      this.visible = true;\n      this.removeEventListeners();\n      document.body.addEventListener(\"click\", this.close, true);\n    }\n  }, {\n    key: \"close\",\n    value: function close(event) {\n      // @ts-ignore\n      if (event && this.contains(event.target)) {\n        return;\n      }\n\n      this.visible = false;\n      this.removeEventListeners();\n    }\n  }, {\n    key: \"enable\",\n    value: function enable() {\n      this.disabled = false;\n    }\n  }, {\n    key: \"disable\",\n    value: function disable() {\n      this.disabled = true;\n    }\n  }, {\n    key: \"selectedIndex\",\n    get: function get() {\n      var _a;\n\n      return (_a = this.nativeSelect) === null || _a === void 0 ? void 0 : _a.selectedIndex;\n    },\n    set: function set(newSelectedIndex) {\n      if (!newSelectedIndex && newSelectedIndex !== 0) {\n        return;\n      }\n\n      this.selectOptionByValue(this.options[newSelectedIndex].value);\n    }\n  }, {\n    key: \"selectedOptions\",\n    get: function get() {\n      var _a;\n\n      return (_a = this.nativeSelect) === null || _a === void 0 ? void 0 : _a.selectedOptions;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var labelClassNames = [\"label\"];\n\n      if (this.disabled) {\n        labelClassNames.push(\"disabled\");\n      }\n\n      if (this.visible) {\n        labelClassNames.push(\"visible\");\n      }\n\n      return html(_templateObject || (_templateObject = _taggedTemplateLiteral([\"\\n      <div class=\\\"select-wrapper\\\">\\n        <select\\n          @change=\", \"\\n          ?disabled=\", \"\\n          ?multiple=\", \"\\n          name=\\\"\", \"\\\"\\n          id=\", \"\\n          size=\\\"1\\\"\\n        >\\n          \", \"\\n        </select>\\n        <div class=\\\"select\\\">\\n          <div\\n            class=\\\"\", \"\\\"\\n            @click=\\\"\", \"\\\"\\n            @keydown=\\\"\", \"\\\"\\n            tabindex=\\\"0\\\"\\n          >\\n            \", \"\\n          </div>\\n          <div class=\\\"dropdown\", \"\\\">\\n            <slot @slotchange=\", \"></slot>\\n          </div>\\n        </div>\\n      </div>\\n    \"])), this.handleNativeSelectChange, this.disabled, this.isMultipleSelect, ifDefined(this.name || undefined), ifDefined(this.id || undefined), this.getNativeOptionsHtml(), labelClassNames.join(\" \"), this.visible ? this.close : this.open, this.openDropdownIfProperKeyIsPressed, this.getDisplayedLabel(), this.visible ? \" visible\" : \"\", this.initializeSelect);\n    }\n  }, {\n    key: \"handleNativeSelectChange\",\n    value: function handleNativeSelectChange() {\n      var _a;\n\n      this.selectedIndex = (_a = this.nativeSelect) === null || _a === void 0 ? void 0 : _a.selectedIndex;\n    }\n  }, {\n    key: \"getNativeOptionsHtml\",\n    value: function getNativeOptionsHtml() {\n      return this.options.map(this.getSingleNativeOptionHtml);\n    }\n  }, {\n    key: \"getSingleNativeOptionHtml\",\n    value: function getSingleNativeOptionHtml(_ref) {\n      var value = _ref.value,\n          label = _ref.label,\n          hidden = _ref.hidden,\n          disabled = _ref.disabled;\n      return html(_templateObject2 || (_templateObject2 = _taggedTemplateLiteral([\"\\n      <option\\n        value=\", \"\\n        ?selected=\", \"\\n        ?hidden=\", \"\\n        ?disabled=\", \"\\n      >\\n        \", \"\\n      </option>\\n    \"])), value, this.isOptionSelected(value), hidden, disabled, label);\n    }\n  }, {\n    key: \"isOptionSelected\",\n    value: function isOptionSelected(value) {\n      var isOptionSelected = this.selectedOption.value === value;\n\n      if (this.isMultipleSelect) {\n        isOptionSelected = Boolean(this._selectedOptions.find(function (option) {\n          return option.value === value;\n        }));\n      }\n\n      return isOptionSelected;\n    }\n  }, {\n    key: \"openDropdownIfProperKeyIsPressed\",\n    value: function openDropdownIfProperKeyIsPressed(event) {\n      if (event.key === KEYS.ENTER || event.key === KEYS.TAB) {\n        this.open();\n      }\n    }\n  }, {\n    key: \"getDisplayedLabel\",\n    value: function getDisplayedLabel() {\n      if (this.isMultipleSelect && this._selectedOptions.length) {\n        return this.getMultiSelectLabelHtml();\n      }\n\n      return this.selectedOption.label || this.defaultLabel;\n    }\n  }, {\n    key: \"getMultiSelectLabelHtml\",\n    value: function getMultiSelectLabelHtml() {\n      return html(_templateObject3 || (_templateObject3 = _taggedTemplateLiteral([\"\\n      <div class=\\\"multi-selected-wrapper\\\">\\n        \", \"\\n      </div>\\n    \"])), this._selectedOptions.map(this.getMultiSelectSelectedOptionHtml));\n    }\n  }, {\n    key: \"getMultiSelectSelectedOptionHtml\",\n    value: function getMultiSelectSelectedOptionHtml(_ref2) {\n      var _this2 = this;\n\n      var label = _ref2.label,\n          value = _ref2.value;\n      return html(_templateObject4 || (_templateObject4 = _taggedTemplateLiteral([\"\\n      <span class=\\\"multi-selected\\\">\\n        \", \"\\n        <span\\n          class=\\\"cross\\\"\\n          @click=\", \"\\n        >\\n        </span>\\n      </span>\\n    \"])), label, function (event) {\n        return _this2.fireOnSelectCallback(event, value);\n      });\n    }\n  }, {\n    key: \"fireOnSelectCallback\",\n    value: function fireOnSelectCallback(event, value) {\n      event.stopPropagation();\n      this.selectOptionByValue(value);\n    }\n  }, {\n    key: \"initializeSelect\",\n    value: function initializeSelect() {\n      this.processChildOptions();\n      this.selectDefaultOptionIfNoneSelected();\n      this.appendHiddenInputToClosestForm();\n    }\n  }, {\n    key: \"processChildOptions\",\n    value: function processChildOptions() {\n      var options = this.querySelectorAll(\"option-pure\");\n      this.totalRenderedChildOptions = options.length;\n\n      for (var i = 0; i < options.length; i++) {\n        this.initializeSingleOption(options[i], i);\n      }\n    }\n  }, {\n    key: \"selectDefaultOptionIfNoneSelected\",\n    value: function selectDefaultOptionIfNoneSelected() {\n      var shouldSelectDefaultOption = !this.selectedOption.value && !this.isMultipleSelect && this.options.length;\n\n      if (shouldSelectDefaultOption) {\n        this.selectOptionByValue(this.options[0].value);\n      }\n    }\n  }, {\n    key: \"initializeSingleOption\",\n    value: function initializeSingleOption(optionElement, optionIndex) {\n      optionElement.setOnSelectCallback(this.selectOptionByValue);\n      this.options[optionIndex] = optionElement.getOption();\n\n      if (this.options[optionIndex].selected) {\n        this.selectOptionByValue(this.options[optionIndex].value);\n      }\n    }\n  }, {\n    key: \"removeEventListeners\",\n    value: function removeEventListeners() {\n      document.body.removeEventListener(\"click\", this.close);\n    }\n  }, {\n    key: \"appendHiddenInputToClosestForm\",\n    value: function appendHiddenInputToClosestForm() {\n      this.form = this.closest(\"form\");\n\n      if (!this.form || this.hiddenInput) {\n        return;\n      }\n\n      this.hiddenInput = document.createElement(\"input\");\n      this.hiddenInput.setAttribute(\"type\", \"hidden\");\n      this.hiddenInput.setAttribute(\"name\", this.formName);\n      this.form.appendChild(this.hiddenInput);\n    }\n  }, {\n    key: \"unselectAllOptions\",\n    value: function unselectAllOptions() {\n      for (var i = 0; i < this.options.length; i++) {\n        this.options[i].unselect();\n      }\n    }\n  }, {\n    key: \"selectOptionByValue\",\n    value: function selectOptionByValue(newOptionValue) {\n      var option = this.options.find(function (_ref3) {\n        var value = _ref3.value;\n        return value === newOptionValue;\n      });\n\n      if (!option) {\n        return;\n      }\n\n      this.setSelectValue(option);\n    }\n  }, {\n    key: \"setSelectValue\",\n    value: function setSelectValue(optionToBeSelected) {\n      if (this.isMultipleSelect) {\n        this.setMultiSelectValue(optionToBeSelected);\n      } else {\n        this.setSingleSelectValue(optionToBeSelected);\n      }\n\n      this.updateHiddenInputInForm();\n      this.dispatchChangeEvent();\n    }\n  }, {\n    key: \"dispatchChangeEvent\",\n    value: function dispatchChangeEvent() {\n      this.dispatchEvent(new Event(\"change\"));\n    }\n  }, {\n    key: \"setMultiSelectValue\",\n    value: function setMultiSelectValue(optionToBeSelected) {\n      var indexInSelectedOptions = this._selectedOptions.indexOf(optionToBeSelected);\n\n      var isAlreadySelected = indexInSelectedOptions !== -1;\n\n      if (isAlreadySelected) {\n        this.values.splice(indexInSelectedOptions, 1);\n\n        this._selectedOptions.splice(indexInSelectedOptions, 1);\n\n        optionToBeSelected.unselect();\n      } else {\n        this.values.push(optionToBeSelected.value);\n\n        this._selectedOptions.push(optionToBeSelected);\n\n        optionToBeSelected.select();\n      }\n\n      this.requestUpdate();\n    }\n  }, {\n    key: \"setSingleSelectValue\",\n    value: function setSingleSelectValue(optionToBeSelected) {\n      this.unselectAllOptions();\n      this.close();\n      this.selectedOption = optionToBeSelected;\n      this.value = optionToBeSelected.value;\n      optionToBeSelected.select();\n    }\n  }, {\n    key: \"updateHiddenInputInForm\",\n    value: function updateHiddenInputInForm() {\n      if (!this.form || !this.hiddenInput) {\n        return;\n      }\n\n      this.hiddenInput.value = this.isMultipleSelect ? this.values.join(\",\") : this.value;\n      var event = new Event(\"change\", {\n        bubbles: true\n      });\n      this.hiddenInput.dispatchEvent(event);\n    }\n  }], [{\n    key: \"styles\",\n    get: function get() {\n      return selectStyles;\n    }\n  }]);\n\n  return SelectPure;\n}(LitElement);\n\n__decorate([property()], SelectPure.prototype, \"options\", void 0);\n\n__decorate([property()], SelectPure.prototype, \"visible\", void 0);\n\n__decorate([property()], SelectPure.prototype, \"selectedOption\", void 0);\n\n__decorate([property()], SelectPure.prototype, \"_selectedOptions\", void 0);\n\n__decorate([property()], SelectPure.prototype, \"disabled\", void 0);\n\n__decorate([property()], SelectPure.prototype, \"isMultipleSelect\", void 0);\n\n__decorate([property()], SelectPure.prototype, \"name\", void 0);\n\n__decorate([property()], SelectPure.prototype, \"_id\", void 0);\n\n__decorate([property()], SelectPure.prototype, \"formName\", void 0);\n\n__decorate([property()], SelectPure.prototype, \"value\", void 0);\n\n__decorate([property()], SelectPure.prototype, \"values\", void 0);\n\n__decorate([property()], SelectPure.prototype, \"defaultLabel\", void 0);\n\n__decorate([property()], SelectPure.prototype, \"totalRenderedChildOptions\", void 0);\n\n__decorate([query(\"select\")], SelectPure.prototype, \"nativeSelect\", void 0);\n\n__decorate([boundMethod], SelectPure.prototype, \"close\", null);\n\n__decorate([boundMethod], SelectPure.prototype, \"getSingleNativeOptionHtml\", null);\n\n__decorate([boundMethod], SelectPure.prototype, \"getMultiSelectLabelHtml\", null);\n\n__decorate([boundMethod], SelectPure.prototype, \"getMultiSelectSelectedOptionHtml\", null);\n\n__decorate([boundMethod], SelectPure.prototype, \"initializeSelect\", null);\n\n__decorate([boundMethod], SelectPure.prototype, \"initializeSingleOption\", null);\n\n__decorate([boundMethod], SelectPure.prototype, \"removeEventListeners\", null);\n\n__decorate([boundMethod], SelectPure.prototype, \"appendHiddenInputToClosestForm\", null);\n\n__decorate([boundMethod], SelectPure.prototype, \"selectOptionByValue\", null);\n\nSelectPure = __decorate([customElement(\"select-pure\")], SelectPure);\nexport { SelectPure }; //# sourceMappingURL=Select.js.map","map":null,"metadata":{},"sourceType":"module"}