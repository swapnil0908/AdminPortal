{"ast":null,"code":"// Licensed to the Software Freedom Conservancy (SFC) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The SFC licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n'use strict';\n\nvar _classCallCheck = require(\"/Users/swapnil0908/Downloads/AdminPortal/node_modules/@babel/runtime/helpers/classCallCheck\").default;\n\nvar _createClass = require(\"/Users/swapnil0908/Downloads/AdminPortal/node_modules/@babel/runtime/helpers/createClass\").default;\n\nvar _require = require('./capabilities'),\n    Capabilities = _require.Capabilities;\n/**\n * Contains information about a single WebDriver session.\n */\n\n\nvar Session = /*#__PURE__*/function () {\n  /**\n   * @param {string} id The session ID.\n   * @param {!(Object|Capabilities)} capabilities The session\n   *     capabilities.\n   */\n  function Session(id, capabilities) {\n    _classCallCheck(this, Session);\n\n    /** @private {string} */\n    this.id_ = id;\n    /** @private {!Capabilities} */\n\n    this.caps_ = capabilities instanceof Capabilities ?\n    /** @type {!Capabilities} */\n    capabilities : new Capabilities(capabilities);\n  }\n  /**\n   * @return {string} This session's ID.\n   */\n\n\n  _createClass(Session, [{\n    key: \"getId\",\n    value: function getId() {\n      return this.id_;\n    }\n    /**\n     * @return {!Capabilities} This session's capabilities.\n     */\n\n  }, {\n    key: \"getCapabilities\",\n    value: function getCapabilities() {\n      return this.caps_;\n    }\n    /**\n     * Retrieves the value of a specific capability.\n     * @param {string} key The capability to retrieve.\n     * @return {*} The capability value.\n     */\n\n  }, {\n    key: \"getCapability\",\n    value: function getCapability(key) {\n      return this.caps_.get(key);\n    }\n    /**\n     * Returns the JSON representation of this object, which is just the string\n     * session ID.\n     * @return {string} The JSON representation of this Session.\n     */\n\n  }, {\n    key: \"toJSON\",\n    value: function toJSON() {\n      return this.getId();\n    }\n  }]);\n\n  return Session;\n}(); // PUBLIC API\n\n\nmodule.exports = {\n  Session: Session\n};","map":null,"metadata":{},"sourceType":"script"}