{"ast":null,"code":"\"use strict\";\n\nvar _regeneratorRuntime = require(\"/Users/swapnil0908/Downloads/AdminPortal/node_modules/@babel/runtime/regenerator\");\n\nvar _classCallCheck = require(\"/Users/swapnil0908/Downloads/AdminPortal/node_modules/@babel/runtime/helpers/classCallCheck\").default;\n\nvar _createClass = require(\"/Users/swapnil0908/Downloads/AdminPortal/node_modules/@babel/runtime/helpers/createClass\").default;\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : new P(function (resolve) {\n        resolve(result.value);\n      }).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar webdriver_commands_1 = require(\"./webdriver_commands\");\n\nvar HIGHLIGHT_COMMAND = [webdriver_commands_1.CommandName.ElementClick, webdriver_commands_1.CommandName.ElementSendKeys, webdriver_commands_1.CommandName.ElementClear];\n\nvar clientScripts = require('./client_scripts/highlight.js');\n/**\n * A barrier that delays forwarding WebDriver commands that can affect the app (ie, clicks or\n * sending text) for a fixed amount of time. During the delay, the element that's the target\n * of the command will be highlighted by drawing a transparent div on top of it.\n */\n\n\nvar HighlightDelayBarrier = /*#__PURE__*/function () {\n  function HighlightDelayBarrier(client, delay) {\n    _classCallCheck(this, HighlightDelayBarrier);\n\n    this.client = client;\n    this.delay = delay;\n  }\n\n  _createClass(HighlightDelayBarrier, [{\n    key: \"isHighlightCommand\",\n    value: function isHighlightCommand(command) {\n      return HIGHLIGHT_COMMAND.indexOf(command.commandName) !== -1;\n    }\n  }, {\n    key: \"highlightData\",\n    value: function highlightData(top, left, width, height) {\n      return JSON.stringify({\n        script: 'return (' + clientScripts.HIGHLIGHT_FN + ').apply(null, arguments);',\n        args: [top, left, width, height]\n      });\n    }\n  }, {\n    key: \"removeHighlightData\",\n    value: function removeHighlightData() {\n      return JSON.stringify({\n        script: 'return (' + clientScripts.REMOVE_HIGHLIGHT_FN + ').apply(null, arguments);',\n        args: []\n      });\n    } // Simple promise-based sleep so we can use async/await\n\n  }, {\n    key: \"sleep\",\n    value: function sleep(delay) {\n      return new Promise(function (resolve) {\n        setTimeout(function () {\n          resolve();\n        }, delay);\n      });\n    }\n  }, {\n    key: \"onCommand\",\n    value: function onCommand(command) {\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        var sessId, el, loc, size;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                if (!(!this.isHighlightCommand(command) || !this.delay)) {\n                  _context.next = 2;\n                  break;\n                }\n\n                return _context.abrupt(\"return\");\n\n              case 2:\n                sessId = command.sessionId;\n                el = command.getParam('elementId'); // The W3C spec does have a 'getRect', but the standalone server doesn't support it yet.\n\n                _context.next = 6;\n                return this.client.getLocation(sessId, el);\n\n              case 6:\n                loc = _context.sent;\n                _context.next = 9;\n                return this.client.getSize(sessId, el);\n\n              case 9:\n                size = _context.sent;\n                _context.next = 12;\n                return this.client.execute(sessId, this.highlightData(loc['y'], loc['x'], size['width'], size['height']));\n\n              case 12:\n                _context.next = 14;\n                return this.sleep(this.delay);\n\n              case 14:\n                _context.next = 16;\n                return this.client.execute(sessId, this.removeHighlightData());\n\n              case 16:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n    }\n  }]);\n\n  return HighlightDelayBarrier;\n}();\n\nexports.HighlightDelayBarrier = HighlightDelayBarrier; //# sourceMappingURL=highlight_delay_barrier.js.map","map":null,"metadata":{},"sourceType":"script"}