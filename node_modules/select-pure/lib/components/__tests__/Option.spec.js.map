{"version":3,"file":"Option.spec.js","sourceRoot":"","sources":["../../../src/components/__tests__/Option.spec.ts"],"names":[],"mappings":"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","sourcesContent":["import \"./../Option\";\nimport { OptionPureElement } from \"./../../models\";\nimport { KEYS } from \"./../../constants\";\n\ndescribe(\"Option component\", () => {\n  describe(\"render\", () => {\n    it(\"renders option\", async() => {\n      document.body.innerHTML = \"<option-pure value='UA'>Ukraine</option-pure>\";\n      const option = document.body.querySelector(\"option-pure\") as OptionPureElement;\n\n      await option.updateComplete;\n\n      expect(option.shadowRoot?.querySelector(\".option\")?.textContent?.trim()).toEqual(\"Ukraine\");\n      expect(option.shadowRoot?.querySelector(\".option\")?.getAttribute(\"class\")).toEqual(\"option\");\n      expect(option.shadowRoot?.querySelector(\".option\")?.getAttribute(\"tabindex\")).toEqual(\"0\");\n    });\n\n    it(\"renders with label as an attribute\", async() => {\n      document.body.innerHTML = \"<option-pure value='PL' label='Poland'></option-pure>\";\n      const option = document.body.querySelector(\"option-pure\") as OptionPureElement;\n\n      await option.updateComplete;\n\n      expect(option.shadowRoot?.querySelector(\".option\")?.textContent?.trim()).toEqual(\"Poland\");\n      expect(option.shadowRoot?.querySelector(\".option\")?.getAttribute(\"class\")).toEqual(\"option\");\n    });\n\n    it(\"renders disabled\", async() => {\n      document.body.innerHTML = \"<option-pure value='PL' label='Poland' disabled></option-pure>\";\n      const option = document.body.querySelector(\"option-pure\") as OptionPureElement;\n      const mockedOnSelect = jest.fn();\n\n      option.setOnSelectCallback(mockedOnSelect);\n\n      await option.updateComplete;\n\n      expect(option.shadowRoot?.querySelector(\".option\")?.getAttribute(\"class\")).toEqual(\"option disabled\");\n      expect(option.shadowRoot?.querySelector(\".option\")?.getAttribute(\"tabindex\")).toEqual(null);\n\n      const optionDiv = option.shadowRoot?.querySelector(\".option\");\n\n      optionDiv?.dispatchEvent(new Event(\"click\"));\n\n      expect(mockedOnSelect).not.toHaveBeenCalled();\n    });\n\n    it(\"renders selected\", async() => {\n      document.body.innerHTML = \"<option-pure value='PL' label='Poland' disabled selected></option-pure>\";\n      const option = document.body.querySelector(\"option-pure\") as OptionPureElement;\n      const mockedOnSelect = jest.fn();\n\n      option.setOnSelectCallback(mockedOnSelect);\n\n      await option.updateComplete;\n\n      expect(option.shadowRoot?.querySelector(\".option\")?.getAttribute(\"class\")).toEqual(\"option selected disabled\");\n    });\n  });\n\n  describe(\"keyboard interactions\", () => {\n    it(\"sellects by pressing enter\", async() => {\n      document.body.innerHTML = \"<option-pure value='UA' label='Ukraine'></option-pure>\";\n      const option = document.body.querySelector(\"option-pure\") as OptionPureElement;\n      const mockedOnSelect = jest.fn();\n\n      option.setOnSelectCallback(mockedOnSelect);\n\n      await option.updateComplete;\n\n      const optionDiv = option.shadowRoot?.querySelector(\".option\");\n\n      expect(mockedOnSelect).not.toHaveBeenCalled();\n\n      optionDiv?.dispatchEvent(new KeyboardEvent(\"keydown\", { key: KEYS.ENTER }));\n\n      expect(mockedOnSelect).toHaveBeenCalledTimes(1);\n      expect(mockedOnSelect).toHaveBeenCalledWith(\"UA\");\n    });\n  });\n\n  describe(\"callbacks\", () => {\n    it(\"fires onSelect callback\", async() => {\n      document.body.innerHTML = \"<option-pure value='PL' label='Poland'></option-pure>\";\n      const option = document.body.querySelector(\"option-pure\") as OptionPureElement;\n      const mockedOnSelect = jest.fn();\n\n      option.setOnSelectCallback(mockedOnSelect);\n\n      await option.updateComplete;\n\n      const optionDiv = option.shadowRoot?.querySelector(\".option\");\n\n      optionDiv?.dispatchEvent(new Event(\"click\"));\n\n      expect(mockedOnSelect).toHaveBeenCalledTimes(1);\n      expect(mockedOnSelect).toHaveBeenCalledWith(\"PL\");\n    });\n\n    it(\"fires onReady callback\", async() => {\n      document.body.innerHTML = \"<option-pure value='PL'>Poland</option-pure>\";\n      const option = document.body.querySelector(\"option-pure\") as OptionPureElement;\n\n      const mockedOnReady = jest.fn();\n      // eslint-disable-next-line no-magic-numbers\n      option.setOnReadyCallback(mockedOnReady, 177);\n\n      await option.updateComplete;\n      // :(\n      option.connectedCallback();\n\n      expect(mockedOnReady).toHaveBeenCalledTimes(1);\n      expect(mockedOnReady.mock.calls).toMatchSnapshot();\n    });\n\n    it(\"fires onReady callback with selected, disabled, hidden attributes\", async() => {\n      document.body.innerHTML = \"<option-pure value='PL' selected disabled hidden>Poland</option-pure>\";\n      const option = document.body.querySelector(\"option-pure\") as OptionPureElement;\n\n      const mockedOnReady = jest.fn();\n      // eslint-disable-next-line no-magic-numbers\n      option.setOnReadyCallback(mockedOnReady, 177);\n\n      await option.updateComplete;\n      // :(\n      option.connectedCallback();\n\n      expect(mockedOnReady).toHaveBeenCalledTimes(1);\n      expect(mockedOnReady.mock.calls).toMatchSnapshot();\n    });\n  });\n\n  describe(\"public methods\", () => {\n    it(\"selects\", async() => {\n      document.body.innerHTML = \"<option-pure value='PL'>Poland</option-pure>\";\n      const option = document.body.querySelector(\"option-pure\") as OptionPureElement;\n\n      option.select();\n      await option.updateComplete;\n\n      expect(option.shadowRoot?.querySelector(\".option\")?.getAttribute(\"class\")).toEqual(\"option selected\");\n      expect(option.getOption()).toMatchSnapshot();\n      expect(document.body.innerHTML).toMatchSnapshot();\n    });\n\n    it(\"unselects\", async() => {\n      document.body.innerHTML = \"<option-pure value='PL'>Poland</option-pure>\";\n      const option = document.body.querySelector(\"option-pure\") as OptionPureElement;\n\n      option.select();\n      await option.updateComplete;\n\n      option.unselect();\n      await option.updateComplete;\n\n      expect(option.shadowRoot?.querySelector(\".option\")?.getAttribute(\"class\")).toEqual(\"option\");\n      expect(option.getOption()).toMatchSnapshot();\n      expect(document.body.innerHTML).toMatchSnapshot();\n    });\n  });\n\n  it(\"sets default value to empty string if not provided\", () => {\n    document.body.innerHTML = \"<option-pure>Poland</option-pure>\";\n    const option = document.body.querySelector(\"option-pure\") as OptionPureElement;\n    expect(option.getOption()).toMatchSnapshot();\n  });\n\n  it(\"sets default value to empty string if it's an empty string attribute\", () => {\n    document.body.innerHTML = \"<option-pure label=''></option-pure>\";\n    const option = document.body.querySelector(\"option-pure\") as OptionPureElement;\n    expect(option.getOption()).toMatchSnapshot();\n  });\n});\n"]}