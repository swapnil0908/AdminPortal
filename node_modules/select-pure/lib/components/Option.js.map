{"version":3,"file":"Option.js","sourceRoot":"","sources":["../../src/components/Option.ts"],"names":[],"mappings":"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","sourcesContent":["import { boundMethod } from \"autobind-decorator\";\nimport { LitElement, html } from \"lit\";\nimport { ifDefined } from \"lit-html/directives/if-defined.js\";\nimport { customElement } from \"lit/decorators/custom-element.js\";\nimport { property } from \"lit/decorators/property.js\";\n\nimport { KEYS } from \"./../constants\";\nimport { optionStyles } from \"./../styles\";\n\n@customElement(\"option-pure\")\nexport class OptionPure extends LitElement {\n  static get styles() {\n    return optionStyles;\n  }\n\n  @property() isSelected: boolean = false;\n  @property() isDisabled: boolean = false;\n  @property() isHidden: boolean = false;\n  @property() optionValue: string = \"\";\n  @property() displayedLabel: string = \"\";\n  @property() optionIndex: number = -1;\n\n  private onSelect?: Function;\n  private onReady?: Function;\n\n  connectedCallback() {\n    super.connectedCallback();\n\n    this.isSelected = this.getAttribute(\"selected\") !== null;\n    this.isDisabled = this.getAttribute(\"disabled\") !== null;\n    this.isHidden = this.getAttribute(\"hidden\") !== null;\n    this.optionValue = this.getAttribute(\"value\") || \"\";\n    this.assignDisplayedLabel();\n\n    this.fireOnReadyCallback();\n  }\n\n  @boundMethod\n  public getOption() {\n    return {\n      label: this.displayedLabel,\n      value: this.optionValue,\n      select: this.select,\n      unselect: this.unselect,\n      selected: this.isSelected,\n      disabled: this.isDisabled,\n      hidden: this.isHidden,\n    };\n  }\n\n  @boundMethod\n  public select() {\n    this.isSelected = true;\n    this.setAttribute(\"selected\", \"\");\n  }\n\n  @boundMethod\n  public unselect() {\n    this.isSelected = false;\n    this.removeAttribute(\"selected\");\n  }\n\n  public setOnReadyCallback(onReadyCallback: Function, optionIndex: number) {\n    this.onReady = onReadyCallback;\n    this.optionIndex = optionIndex;\n  }\n\n  public setOnSelectCallback(callback: Function) {\n    this.onSelect = callback;\n  }\n\n  render() {\n    const optionWrapperClassNames = [\"option\"];\n    if (this.isSelected) {\n      optionWrapperClassNames.push(\"selected\");\n    }\n    if (this.isDisabled) {\n      optionWrapperClassNames.push(\"disabled\");\n    }\n    return html`\n      <div\n        class=\"${optionWrapperClassNames.join(\" \")}\"\n        @click=${this.fireOnSelectCallback}\n        @keydown=\"${this.fireOnSelectIfEnterPressed}\"\n        tabindex=\"${ifDefined(this.isDisabled ? undefined : \"0\")}\"\n      >\n        <slot hidden @slotchange=${this.assignDisplayedLabel}></slot>\n        ${this.displayedLabel}\n      </div>\n    `;\n  }\n\n  private assignDisplayedLabel() {\n    if (this.textContent) {\n      this.displayedLabel = this.textContent;\n      return;\n    }\n    if (this.getAttribute(\"label\")) {\n      this.displayedLabel = this.getAttribute(\"label\") || \"\";\n    }\n  }\n\n  @boundMethod\n  private fireOnReadyCallback() {\n    if (!this.onReady) {\n      return;\n    }\n    this.onReady(this.getOption(), this.optionIndex);\n  }\n\n  private fireOnSelectCallback(optionClickEvent: Event) {\n    optionClickEvent.stopPropagation();\n    if (!this.onSelect || this.isDisabled) {\n      return;\n    }\n    this.onSelect(this.optionValue);\n  }\n\n  private fireOnSelectIfEnterPressed(keyboardKeydownEvent: KeyboardEvent) {\n    if (keyboardKeydownEvent.key === KEYS.ENTER) {\n      this.fireOnSelectCallback(keyboardKeydownEvent);\n    }\n  }\n}\n"]}